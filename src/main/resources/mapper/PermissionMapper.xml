<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaoxin.manager.dao.PermissionMapper">
    <resultMap id="BaseResultMap" type="com.xiaoxin.manager.pojo.Permission">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="pid" property="pid" jdbcType="INTEGER"/>
        <result column="zindex" property="zindex" jdbcType="INTEGER"/>
        <result column="istype" property="istype" jdbcType="INTEGER"/>
        <result column="descpt" property="descpt" jdbcType="VARCHAR"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="icon" property="icon" jdbcType="VARCHAR"/>
        <result column="page" property="page" jdbcType="VARCHAR"/>
        <result column="insert_time" property="insertTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="PermColumn" >
        id, name,pid pId, zindex, istype, code, icon, page
    </sql>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from permission
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.xiaoxin.manager.pojo.Permission">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into permission (`name`, pid, zindex,
        istype, descpt, code,
        icon, page, insert_time,
        update_time)
        values (#{name,jdbcType=VARCHAR}, #{pid,jdbcType=INTEGER}, #{zindex,jdbcType=INTEGER},
        #{istype,jdbcType=INTEGER}, #{descpt,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR},
        #{icon,jdbcType=VARCHAR}, #{page,jdbcType=VARCHAR}, #{insertTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.xiaoxin.manager.pojo.Permission">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update permission
        set `name` = #{name,jdbcType=VARCHAR},
        pid = #{pid,jdbcType=INTEGER},
        zindex = #{zindex,jdbcType=INTEGER},
        istype = #{istype,jdbcType=INTEGER},
        descpt = #{descpt,jdbcType=VARCHAR},
        code = #{code,jdbcType=VARCHAR},
        icon = #{icon,jdbcType=VARCHAR},
        page = #{page,jdbcType=VARCHAR},
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select id, `name`, pid, zindex, istype, descpt, code, icon, page, insert_time, update_time
        from permission
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select id, `name`, pid, zindex, istype, descpt, code, icon, page, insert_time, update_time
        from permission
    </select>

    <!--=Start findPermsByRole 根据角色ID查找权限树列表-->
    <select id="findPermsByRoleId" resultMap="BaseResultMap">
        select
        <include refid="PermColumn"/>
        from permission p
        LEFT JOIN role_permission rp ON rp.permit_id=p.id
        WHERE rp.role_id=#{roleId}
    </select>
    <!--=End findPermsByRole 根据角色ID查找权限树列表-->
</mapper>